#!/bin/bash

if [[ "$CONTINUOUS_INTEGRATION" != true || "$TRAVIS_PULL_REQUEST" != false ]]; then
  echo "Skipping deployment because not CI on master."
  exit
fi

DEPLOY_NAME="TarBot"
DEPLOY_EMAIL="seshrs+tarbot@umich.edu"

# Sanity check that 
if ! diff -q file.txt docs/file_copy.txt; then
  echo "Skipping deploy because files are up to date."
  exit
fi
echo "Starting deploy"

set -x

git checkout master

# Build the file to be committed
rm -f docs/file_copy.txt
cp file.txt docs/file_copy.txt
cp file.txt docs/file_copy_should_not_be_committed.txt
git add docs/file_copy.txt

# Make the commit
git config user.name "TarBot"
git config user.email "seshrs+tarbot@umich.edu"
git commit -m "Rebuilt file_copy.txt"
git remote -v # This is for debugging
# We need to remove the remote and re-add the remote using the access token
remote_url=`git config --get remote.origin.url`
echo $remote_url
set +x
echo "Adding deploy key"
# Add the access token
remote_url=${remote_url/https:\/\//https://${GH_ACCESS_TOKEN}@}
git remote set-url origin ${remote_url}
set -x

git push origin master
